/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-07 00:55:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import G_T.OfficeSystem.controller.LoginController;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>ログイン画面</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/js/jquery-1.10.2.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("\t\t\t.{ }\r\n");
      out.write("\r\n");
      out.write("\t\t\t.form\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tmargin:0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.LABEL\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tcolor:red;\r\n");
      out.write("\t\t\t\tmargin:0 auto;\r\n");
      out.write("\t\t\t\tdisplay:block;\r\n");
      out.write("\t\t\t\ttext-align:center;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tbody {\r\n");
      out.write("\t\t\t\t/* background-color:#C0C0C0; */\r\n");
      out.write("\t\t\t\tmargin:0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.BACKGROUND\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tbackground-color:WHITE;\r\n");
      out.write("\t\t\t\twidth:1012px;\r\n");
      out.write("\t\t\t\tmin-height:100%;\r\n");
      out.write("\t\t\t\tmargin:0 auto;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t.TEXTBOX\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\twidth:100%;\r\n");
      out.write("\t\t\t\theight:30px;\r\n");
      out.write("\t\t\t\tmargin-bottom:5px;\r\n");
      out.write("\t\t\t\tborder-color:#69A4D8;\r\n");
      out.write("\t\t\t\tborder:2px #69A4D8 solid;\r\n");
      out.write("\t\t\t\tborder-radius:5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t.LEFT\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tfloat:left;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.RIGHT\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tfloat:right;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.BUTTON\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tbackground-color:#69A4D8;\r\n");
      out.write("\t\t\t\tborder:2px #69A4D8 solid;\r\n");
      out.write("\t\t        width:100%;\r\n");
      out.write("\t\t\t\tcolor:#fff;\r\n");
      out.write("\t\t\t\tborder-radius:5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.TEXTAREA\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tresize:none;\r\n");
      out.write("\t\t\t\twidth:500px;\r\n");
      out.write("\t\t\t\theight:250px;\r\n");
      out.write("\t\t\t\tmargin:0 auto;\r\n");
      out.write("\t\t\t\tdisplay:block;\r\n");
      out.write("\t\t        border-color:#69A4D8;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.CONTAINER1\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tpadding-top:100px;\r\n");
      out.write("\t\t\t\twidth:100%\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.CONTAINER2\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\twidth:250px;\r\n");
      out.write("\t\t\t\tmargin:0 auto;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.CONTAINER3{\r\n");
      out.write("\t\t\t\twidth:100%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.CHECKBOX{\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t#h2{\r\n");
      out.write("\t\t\t\tdisplay:none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"headerTitle\" hidden>ログイン画面</div>\r\n");
      out.write("\t\t<div class=\"h1\"><h1 id=\"h2\">ログイン画面</h1></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<form method=\"post\" action=\"/OfficeSystem_Hibernate/Login\" class=\"form\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"BACKGROUND\">\r\n");
      out.write("\t\t\t\t<div class=\"CONTAINER1\">\r\n");
      out.write("\t\t\t\t\t<label class=\"LABEL\"> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"CONTAINER2\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"TEXTBOX\" id=\"userId\" name=\"userId\" placeholder=\"ユーザーID\"/>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"TEXTBOX\" id=\"password\" name=\"password\" placeholder=\"パスワード\"/>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"CONTAINER3\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"checkbox\" name=\"checkbox\" value=\"CHECKBOX\">\r\n");
      out.write("\t\t\t\t\t\t\tIDを保存する\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" class=\"BUTTON\" value=\"ログイン\" />\r\n");
      out.write("\t\t\t\t\t\t<a href=\"\" class=\"LEFT\" >パスワード忘れ</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"\" class=\"RIGHT\" >新規申請</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<textarea class=\"TEXTAREA\" >お知らせ</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<script type=\"text/ecmascript\">\r\n");
      out.write(" \t\t\t$(\".BUTTON\").click(function () {\r\n");
      out.write("\t\t\t\tif ($(\"#userId\").val() == \"\") {\r\n");
      out.write("\t\t\t\t\talert(\"ユーザーIDを入力してください\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif ($(\"#password\").val() == \"\") {\r\n");
      out.write("\t\t\t\t\talert(\"パスワードを入力してください\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl: \"/OfficeSystem_Hibernate/Login\",\r\n");
      out.write("\t\t\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\t\t\tdata: { userId:$(\"#userId\").val(), password: $(\"#password\").val() },\r\n");
      out.write("\t\t\t\t\tsuccess: function (data) {\r\n");
      out.write(" \t\t\t\t\t\tif (data != \"\") {\r\n");
      out.write("\t\t\t\t\t\t\tsetCookie();\r\n");
      out.write("\t\t\t\t\t\t\twindow.location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/Find\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"ユーザーIDまたはパスワードが存在しません\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(XMLHttpRequest,textStatus,errorThrown,data){\r\n");
      out.write("\t\t\t\t\t\talert(XMLHttpRequest.responseText);\r\n");
      out.write("/* \t\t\t\t\t\talert(\"XMLHttpRequest : \" + XMLHttpRequest.status\r\n");
      out.write("\t\t\t\t\t\t\t\t+\"\\ntextStatus     : \" + textStatus\r\n");
      out.write("\t\t\t\t\t\t\t\t+\"\\nerrorThrown    : \" + errorThrown.message\r\n");
      out.write("\t\t\t\t\t\t\t\t+\"\\n\"+XMLHttpRequest.responseText); */\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- cookie -->\r\n");
      out.write("\t\t<script type=\"text/ecmascript\">\r\n");
      out.write("\t\t\twindow.onload = function setId(){\r\n");
      out.write("\t\t\t\tif(getCookie('checkbox')=='true'){\r\n");
      out.write("\t\t\t\t\t//document.getElementById(\"checkbox\").checked = true;\r\n");
      out.write("\t\t\t\t\tuserId.value = getCookie('id');\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t//document.getElementById(\"checkbox\").checked = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tfunction setCookie() {\r\n");
      out.write("\t\t\t\tvar date1,date2;  //日付データを格納する変数\r\n");
      out.write("\t\t\t\tvar kigen = 30;   //cookieの期限（今回は30日）\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t//現在の日付データを取得\r\n");
      out.write("\t\t\t\tdate1 = new Date();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t//30日後の日付データを作成\r\n");
      out.write("\t\t\t\t//date1.setTime(date1.getTime() + kigen*24*60*60*1000);\r\n");
      out.write("\t\t\t\tdate1.setTime(date1.getTime() + 30000);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t//GMT形式に変換して変数date2に格納する\r\n");
      out.write("\t\t\t\tdate2 = date1.toGMTString();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (document.getElementById(\"checkbox\").checked) {\r\n");
      out.write("\t\t\t\t\tdocument.cookie = 'id=' + document.getElementById(\"userId\").value + \";expires=\" + date2;\r\n");
      out.write("\t\t\t\t\tdocument.cookie = 'checkbox=true;expires=' + date2;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tdocument.cookie = 'checkbox=false;expires=' + date2;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tfunction getCookie( name )\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t    var result = null;\r\n");
      out.write("\r\n");
      out.write("\t\t\t \t//\"key=\"\r\n");
      out.write("\t\t\t    var cookieName = name + '=';\r\n");
      out.write("\t\t\t \t//\"key=value; key=value;...\"\r\n");
      out.write("\t\t\t    var allcookies = document.cookie;\r\n");
      out.write("\r\n");
      out.write("\t\t\t    var position = allcookies.indexOf( cookieName );\r\n");
      out.write("\t\t\t    if( position != -1 )\r\n");
      out.write("\t\t\t    {\r\n");
      out.write("\t\t\t        var startIndex = position + cookieName.length;\r\n");
      out.write("\r\n");
      out.write("\t\t\t        //indexOf( 検索したい文字, 検索開始位置 )\r\n");
      out.write("\t\t\t        var endIndex = allcookies.indexOf( ';', startIndex );\r\n");
      out.write("\t\t\t        //最後のcookieは；がない　-1になってる\r\n");
      out.write("\t\t\t        if( endIndex == -1 )\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            endIndex = allcookies.length;\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\r\n");
      out.write("\t\t\t        result = decodeURIComponent(\r\n");
      out.write("\t\t\t        \t//indexStart から indexEnd 未満の文字を取り出します\r\n");
      out.write("\t\t\t            allcookies.substring( startIndex, endIndex ) );\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\r\n");
      out.write("\t\t\t    return result;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
